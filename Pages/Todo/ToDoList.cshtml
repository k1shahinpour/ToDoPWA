@page
@model ToDoPWA.Pages.Todo.ToDoListModel

@{
    ViewData["Title"] = "ToDoList";
}



<div id="app">
    <div class=" w-100 bg-primary text-light py-2  shadow-lg text-center" data-toggle="modal" data-target="#myModal" style="position:fixed; z-index:20; bottom:0; opacity:0.8">
        <span class="fa fa-plus fa-2x"></span>
    </div>
    <br />
    <div class="container bg-secondary text-light rounded mb-2 p-3 shadow" v-for="(item,index) in items.slice().reverse()">
        <p class="display-4 font-weight-lighter w-100 text-center"><span class="display-4 fa fa-check " v-if="item.complete === '1'"></span> {{item.title}}</p>
        <div class="row">
            <div class="col-9">
                <span class="fa fa-clock"></span>
                <span class=""> {{item.dueDate}}</span>
            </div>
            <div class="col-3 d-flex justify-content-end">
                <a class="btn fa fa-sticky-note"></a>
                <a class="btn fa fa-pen" data-toggle="modal" data-target="#editModal" v-on:click="editItem(item,index)"></a>
                <a class="btn fa fa-trash" v-on:click="removeItem(item,index)"></a>


            </div>
        </div>

    </div>
    <partial name="addModal" />
    <partial name="editModal" />
</div>


@section Scripts{

    <script>
        var app = new Vue({
            el: "#app",
            data: {
                items: [],
                title: "",
                complete: false,
                //dueDate: "",
                note: "",
                date: "",
                time: "",
                itemIdex: null,
                itemId: null

            },
            created: function () {
                this.getItems();

            },
            computed: {

                dueDate: {
                    get: function () {
                        return this.date + 'T' + this.time;
                    },

                    set: function (newValue) {
                        var params = newValue.split('T')
                        this.date = params[0]
                        this.time = params[1]
                    },
                }

            },
            methods: {
                clearData: function () {
                    var vm = this;

                    vm.title = "",
                        vm.complete = false,
                        vm.dueDate = "",
                        vm.note = "",
                        itemIdex = null,
                        itemId = null
                },

                removeItem: function (item, index) {
                    var vm = this;
                    var itemToDelete = {
                        id: item.id
                    }

                    $.ajax({ url: "/todo", data: itemToDelete, method: "DELETE" })
                        .done(function (data) {
                            vm.items.splice(vm.items.length - index - 1, 1);
                        }).fail(function () { });
                },

                editItem: function (item, index) {
                    this.title = item.title;
                    this.note = item.note;
                    this.dueDate = item.dueDate;
                    this.complete = item.complete;
                    itemIdex = this.items.length - index - 1;
                    itemId = item.id;
                    $('#editModal').modal('show');
                },

                editItemConfirm: function () {
                    var vm = this;
                    var newItem = {
                        id: itemId,
                        title: vm.title,
                        complete: vm.complete,
                        dueDate: vm.dueDate,
                        note: vm.note
                    }
                    $.ajax({ url: "/todo", data: newItem, method: "PUT" })
                        .done(function (data) {
                            vm.items[itemIdex].title = newItem.title;
                            vm.items[itemIdex].complete = newItem.complete;
                            vm.items[itemIdex].dueDate = newItem.dueDate;
                            vm.items[itemIdex].note = newItem.note;
                        }).fail(function () {

                        }).always(function () {
                            vm.clearData();
                        });
                    $('#editModal').modal('hide');

                },

                addItem: function () {

                    var vm = this;

                    var newItem = {
                        title: vm.title,
                        complete: false,
                        dueDate: vm.dueDate,
                        note: vm.note
                    }

                    $.ajax({ url: "/todo", data: newItem, method: "POST" })
                        .done(function (data) {
                            // vm.items.splice(0, 0, newItem)
                            vm.items.push(data)
                        }).fail(function () {

                        }).always(function () {
                            vm.clearData();
                        });
                },

                getItems: function () {
                    var vm = this;
                    $.ajax({ url: "/todo", method: "GET" })
                        .done(function (data) {
                            vm.items = data;
                        }).fail(function () { });
                }
            }
        });
    </script>

}